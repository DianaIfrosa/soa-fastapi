server {
  listen 8080;

  location /api/v1/users {
    proxy_pass http://user_service:8000/api/v1/users;
  }

  location /api/v1/products {
    proxy_pass http://product_service:8000/api/v1/products;
  }

  # location /api/v1/logs {
  #   internal;
  #   proxy_pass http://logging_service:8000/api/v1/logs;
  # }


  location /api/v1/orders {
    # auth_request /validate-token; todo: fix authentication is ensured before ordering is possible
    proxy_pass http://order_service:8000/api/v1/orders;
  }

  # #token validation logic via users service
  # location = /validate-token {
  #   internal;
  #   proxy_pass http://user_service:8000/api/v1/users/validate-token/;
  #   proxy_set_header Content-Type application/json;
  #   proxy_set_header Authorization $http_authorization;
  # }

  # #unauthorized response
  # error_page 401 = /unauthorized;
  # location = /unauthorized {
  #   return 401 '{"error": "Unauthorized"}';
  #   add_header Content-Type application/json;
  # }
}

# upstream order_service {
#   server order_service:8000;
# }

# upstream user_service {
#   server user_service:8000;
# }